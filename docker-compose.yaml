version: "3.4"

services:
  frontend:
    image: us.gcr.io/internal-236323/node:16-alpine
    expose:
      - 3000
    ports:
      - 0:3000
    tty: true
    command: npm run dev
    environment:
      - SOCK_HOST=.${DEV_DOMAIN}
      # - APOLLO=.${DEV_DOMAIN}
    env_file: .env
    volumes:
      - .:/app
      - node-modules:/app/node_modules
    labels:
      - traefik.port=${PORT}
      - traefik.docker.network=proxy
      - traefik.http.routers.-frontend-http.rule=Host(`.${DEV_DOMAIN}`)
      - traefik.http.routers.-frontend-http.middlewares=-frontend-https@docker
      - traefik.http.middlewares.-frontend-https.redirectscheme.scheme=https
      - traefik.http.routers.-frontend-https.entrypoints=web-secure
      - traefik.http.routers.-frontend-https.rule=Host(`.${DEV_DOMAIN}`)
      - traefik.http.routers.-frontend-https.tls=true
      - traefik.http.routers.-frontend-https.tls.certResolver=14four
      - traefik.http.routers.-frontend-https.tls.domains[0].main=*.${DEV_DOMAIN}
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.sslheader.headers.sslredirect=true
      - traefik.http.middlewares.sslheader.headers.isDevelopment=true
      - traefik.http.routers.-frontend-https.middlewares=sslheader@docker
    networks:
      - local
      - proxy

# Create Persistance Volume
volumes:
  node-modules:

# Setup Networks
# Local for internal communications
# Proxy for Traefik communications
networks:
  local:
    external: false
  proxy:
    external: true
